# in static.yaml
staticSpec:
  p_elm:
    type: panel
    params:
      orientation: h
      split: 0.6
    panels:
      - type: panel
        params:
          orientation: v
          split: 0.5
        panels:
          - type: list
            params:
              orientation: h
            id: stand_loc #muss dict sein by oid
          - type: list
            params:
              orientation: h
            id: bld_loc
      - type: panel
        params:
          orientation: v
          split: 0.5
        panels:
          - type: list # player hand/stand
            id: hand_loc
            params:
              orientation: h
          - type: dict # player info
            id: info_loc

  root00:
    #type: panel
    id: market_loc
    params:
      size: 
        w: 4
        h: 3
        unit: 'cm'
      color: dimgray

  root01:
    params:
      orientation: v
    panels:
      - id: hallo
      - id: wiebitte

  root02:
    params:
      orientation: h
      split: equal
    panels:
      - id: A
      - id: B
      - id: C

  root03:
    params:
      orientation: v
      split: equal
    panels:
      - id: A
      - id: B
        panels:
          - id: C
          - id: D
      - id: E

  root04:
    type: panel
    params:
      orientation: h
      split: 0.6
    panels:
      - type: panel
        params:
          orientation: v
          split: 0.5
        panels:
          - id: A
          - id: B
      - type: panel
        id: C

  root05:  #minimized root04
    params:
      split: 0.6
    panels:
      - params:
          orientation: v
        panels:
          - id: A
          - id: B
      - id: C

  root:
    type: panel
    params:
      orientation: h
      split: 0.6
    panels:
      - type: panel
        params:
          orientation: v
          split: 0.5
        panels:
          - id: market_loc
          - id: me_loc
      - type: panel
        id: all_opps

  global_market:
    loc: market_loc
    type: panel
    params:
      orientation: h
      split: 0.5
    panels:
      - type: list
        id: neutral_loc
      - type: list
        params:
          orientation: v
        id: discard_loc

# in dynamic.yaml
# dynamic - subsets of the full gameobject/player set in status

dynamicSpec:
  player_info:
    cond:
      instanceof: _player # auto-parent of me and opponents
    type: p_elm
    #id: .name
    panels.0.panels.0.elm: .market # "composite" keys
    panels.0.panels.1.elm: .buildings
    panels.1.panels.0.elm: .hand
    .hand_loc: .hand
    panels.1.panels.1.data:
      vps: .vps
      money: .money
      herald: .herald # only shown if it is found

  self_info: # in general sets containing one element behave like the element on its own
    cond:
      obj_type: GamePlayer
    loc: me_loc

  opp_info: # defines a type
    cond:
      obj_type: opponent
    loc: all_opps
    panels: . # number of panels infered by number specified
  #  params.num: this._size # all sets have some default properties, eg. size accessed through "this"

  market_info:
    cond:
      obj_type: market
    loc: neutral_loc

    data: .neutral

  discard_info:
    cond:
      obj_type: discard_pile
    loc: discard_loc

    data: .next

  all_cards:
    cond:
      obj_type: card
    type: info # leaf component

  all_viz_cards:
    _source: all_cards # override default (all gameobjects/players) to the gameobjects/players in specified set
    cond:
      prop: short_name # prop exists
    params:
      bg: white
      font:
        color: black
        bold: True
        size: medium
    data: .short_name

  all_hidden_cards:
    _source: all_cards
    cond:
      no_prop: short_name # prop doesn't exist
    params:
      bg:
        image: card_bg.jpg # some texture file

  bld_info:
    cond:
      instanceof: building # any sub game object of building

    type: panel

    params:
      orientation: h
      split: 0.4

    panels:
      - type: info
        data: # info data can also be specified as a list of "key,value" pairs if the keys also have to be computed/dynamic
          - key: .obj_type
            value: .address
      - type: list
        elm: .storage
